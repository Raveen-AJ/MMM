# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  batch: true
  branches:
    include:
    - develop
    - features/*
    - hotfixes/*
  paths:
    include:
    - AppTests/OseRpk.XamarinUiTests
    - App/OseRpk.Droid

pool:
  name: Hosted VS2017
  demands:
  - msbuild
  - visualstudio
  - vstest

variables:
  Parameters.solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  Version.revision: '$[counter(format(''{0:yyyyMMdd}'', pipeline.startTime), 0)]'

steps:
- powershell: |
   # Write your PowerShell commands here.
   # $(Version.revision) is a counter that is reset every day and declared as variable
   
   $DaysSince=((get-date)-(get-date "12/31/2000")).Days
   echo "##vso[task.setvariable variable=VersionBuildId]$DaysSince.$(Version.revision)"
   
   
  displayName: 'PowerShell Script set version and revision'

- powershell: |
   # Write your PowerShell commands here.
   Write-Host  "Version.Revision is: $env:VersionBuildId"


  displayName: 'PowerShell Script echo version and revision'

- task: colinsalmcorner.colinsalmcorner-buildtasks.version-assemblies-task.VersionAssemblies@2
  displayName: 'Version Assemblies using **/AssemblyInfo.*'
  inputs:
    versionSource: variable
    customNumberVariable: VersionBuildId
    versionFormat: custom
    customBuildRegex: '(\d+).(\d+)'
    replaceVersionFormat: custom
    customReplaceRegex: '\.\d\.\d\"\)\]'
    replacePrefix: .
    replacePostfix: '")]'
    failIfNoMatchFound: true

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.4.1'
  inputs:
    versionSpec: 4.4.1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(Parameters.solution)'

- task: VSBuild@1
  displayName: 'Build solution **\*.sln'
  inputs:
    solution: '$(Parameters.solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  env:
    SAFE_APPCENTER_IOS_SECRET: $(AppCenter_iOS_Secret)
    SAFE_APPCENTER_ANDROID_SECRET: $(AppCenter_Android_Secret)
    SAFE_APPCENTER_WINDOWS_SECRET: $(AppCenter_Windows_Secret)
    SolutionDir: '$(Build.Repository.LocalPath)/'

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
  continueOnError: true

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    contents: '**\bin\$(buildConfiguration)\**'
    targetFolder: $(Build.ArtifactStagingDirectory)
    CleanTargetFolder: true
    OverWrite: true
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: DeepLinkR'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: DeepLinkR
  condition: succeededOrFailed()